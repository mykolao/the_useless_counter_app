{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mget","method","mpost","errFlag","App","useState","count","setCount","update","url","fetch","then","res","json","data","value","catch","err","console","error","getCounter","API_BASE","setInterval","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","log"],"mappings":"sMAOMA,G,MAAO,CAAEC,OAAQ,QACjBC,EAAQ,CAAED,OAAQ,QAEpBE,GAAU,EAuDCC,MArDf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,KAGPC,EAAS,SAACC,EAAKR,GACdE,GACHO,MAAMD,EAAKR,GACRU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLP,EAASO,EAAKC,UAEfC,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdd,GAAU,MAaZiB,EAAa,WACjBZ,EAlCaa,yCAkCIrB,IASnB,OANAoB,IAEAE,aAAY,WACVF,MACC,MAGD,uBAAMG,UAAU,YAAhB,UACE,wBAAQA,UAAU,SAAlB,SACE,uDAEF,mBAAGA,UAAU,UAAb,SAAwBjB,IACxB,sBAAKiB,UAAU,YAAf,UACE,wBAAQC,QArBU,WACtBhB,EA5BkBa,iDA4BInB,IAoBgBqB,UAAU,mBAA5C,sBAGA,wBAAQC,QA5BU,WACtBhB,EAzBkBa,iDAyBInB,IA2BgBqB,UAAU,mBAA5C,6BC7COE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,EAAgBP,QAAQoB,S","file":"static/js/main.558af6b0.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nconst API_BASE = \"https://economic-little-dog.glitch.me/\";\nconst getValue = API_BASE;\nconst increaseValue = API_BASE + \"increase\";\nconst decreaseValue = API_BASE + \"decrease\";\nconst mget = { method: \"GET\" };\nconst mpost = { method: \"POST\" };\n\nlet errFlag = false;\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  const update = (url, method) => {\n    if (!errFlag) {\n      fetch(url, method)\n        .then((res) => res.json())\n        .then((data) => {\n          setCount(data.value);\n        })\n        .catch((err) => {\n          console.error(err);\n          errFlag = true;\n        });\n    }\n  };\n\n  const increaseCounter = () => {\n    update(increaseValue, mpost);\n  };\n\n  const decreaseCounter = () => {\n    update(decreaseValue, mpost);\n  };\n\n  const getCounter = () => {\n    update(getValue, mget);\n  }\n\n  getCounter()\n\n  setInterval(() => {\n    getCounter();\n  }, 3500);\n\n  return (\n    <main className=\"container\">\n      <header className=\"header\">\n        <h1>The Useless Counter</h1>\n      </header>\n      <p className=\"counter\">{count}</p>\n      <div className=\"group-btn\">\n        <button onClick={decreaseCounter} className=\"btn decrease-btn\">\n          Decrease\n        </button>\n        <button onClick={increaseCounter} className=\"btn increase-btn\">\n          Increase\n        </button>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log());\n"],"sourceRoot":""}